name: Generate ABI

on:
  push:
    branches:
      - develop
      - cicd_exp
  workflow_dispatch:

permissions:
  contents: read


jobs:
  build:
    runs-on: self-hosted  # ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c  # v3.6.0
        with:
          node-version-file: package.json
      - id: npm-deps
        name: Install dependencies
        run: npm ci
      - id: abis
        name: Generate ABI files
        run: npm run build:abi
      - id: store-abis
        name: Store ABI files
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce  # v3.1.2
        with:
          name: ABIs
          path: abi/
      - id: go-fixup
        # Workaround for setup-go on self-hosted runner, without a $HOME
        name: Go fixup
        run: |
          echo "GOMODCACHE=/opt/go-cache/mod" >> $GITHUB_ENV
          echo "GOCACHE=/opt/go-cache/build" >> $GITHUB_ENV
          echo "GOPATH=/opt/go" >> $GITHUB_ENV
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.4'
      - id: abigen
        name: Build abigen
        run: |
          go install -mod=mod github.com/ethereum/go-ethereum/cmd/abigen
      - id: setvars
        name: ${{github.event_name}}-${{github.event.ref }}
        shell: bash
        run: |          
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            REF_KIND=tag
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/release/* ]]; then
            REF_KIND=tag
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            REF_KIND=branch
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            REF_KIND=pr
            VERSION=pr-${{ github.event.number }}
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "REF_KIND=${REF_KIND}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "ref_kind=${REF_KIND}" >> $GITHUB_OUTPUT

      - id: checkout-go-bindings
        name: checkout go bindings
        run: |
          git clone https://${{ secrets.BACKFEED }}@github.com/momentum-xyz/go-contracts.git          
          ( cd go-contracts &&  ( git switch $VERSION || git switch -c $VERSION ) ) 

      - id: gen-go-bindings
        name: Generate go bindings
        run: |
          for FN in abi/*.json; do
            MNAME=`echo $FN| sed 's/abi\///;s/.json//'`
            LMNAME=`echo $MNAME| tr '[:upper:]' '[:lower:]'`
            echo $MNAME $LMNAME
            $GOPATH/bin/abigen --abi $FN --pkg abi --type $LMNAME --out go-contracts/$LMNAME.go
            ( cd go-contracts && git add $LMNAME.go)
          done
          ( cd go-contracts && git commit -m "Update GO bindings by CI/CD")
      - id: push_bindings
        name: Push GO bindings
        run: |          
          cd go-contracts
          git branch
          if [ "$REF_KIND" = "branch" ]; then
            echo Q1
            git push -u origin $VERSION
          elif [ "$REF_KIND" = "tag" ]; then
          echo Q2
            git tag $VERSION && git push origin $VERSION          
          fi
                    

